[project]
name = "notification"
version = "0.1.0"
description = "A microservice for sending email notifications for completed conversions. Consumes notifications from a RabbitMQ queue."
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.30.0",
    "pydantic>=2.7.0",
    "pydantic-settings>=2.10.1",
    "aio-pika>=9.4.3",
    "httpx>=0.28.1",
]

[project.optional-dependencies]
dev = ["ruff>=0.5.0"]

[tool.ruff]
line-length = 100
target-version = "py313"
src = ["."]

[tool.ruff.lint]
select = [
    "E",
    "F",   # pycodestyle / pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "S",   # bandit
    "C4",  # flake8-comprehensions
    "PIE", # flake8-pie
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "PTH", # flake8-use-pathlib
    "PL",  # pylint-like checks
    "RUF", # Ruff-specific rules
]
ignore = [
    "S101", # use of assert (fine for tests / simple invariants)
    "B904",
    "B008",
    "S105",
]
unfixable = [
    "F401", # imported but unused (sometimes for __all__ / re-exports)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["auth"]
combine-as-imports = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = 100

[dependency-groups]
dev = ["pyright>=1.1.404"]
